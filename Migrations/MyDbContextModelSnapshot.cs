// <auto-generated />
using System;
using Football4.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Football4.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Football4.Data.Game", b =>
                {
                    b.Property<int>("GameId");

                    b.Property<int?>("AwayScore");

                    b.Property<string>("AwayTeamId");

                    b.Property<string>("FavoriteTeamId");

                    b.Property<DateTime>("GameTimeZ");

                    b.Property<int?>("HomeScore");

                    b.Property<string>("HomeTeamId");

                    b.Property<int>("Spread")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("Week");

                    b.HasKey("GameId");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("FavoriteTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Football4.Data.Team", b =>
                {
                    b.Property<string>("TeamId");

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Football4.Data.Game", b =>
                {
                    b.HasOne("Football4.Data.Team", "AwayTeam")
                        .WithMany("AwayGames")
                        .HasForeignKey("AwayTeamId");

                    b.HasOne("Football4.Data.Team", "Favorite")
                        .WithMany()
                        .HasForeignKey("FavoriteTeamId");

                    b.HasOne("Football4.Data.Team", "HomeTeam")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeTeamId");
                });
#pragma warning restore 612, 618
        }
    }
}
